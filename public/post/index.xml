<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Adam&#39;s Blag</title>
    <link>/post/</link>
    <description>Recent content in Posts on Adam&#39;s Blag</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Adam Melnyk 2020</copyright>
    <lastBuildDate>Sun, 23 Aug 2020 15:45:10 -0500</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debugging CHIP8 code</title>
      <link>/post/debugging-chip8-code/</link>
      <pubDate>Sun, 23 Aug 2020 15:45:10 -0500</pubDate>
      
      <guid>/post/debugging-chip8-code/</guid>
      <description>The first time I wrote a program in hexidecimal or assembly was using a made up, educational cpu called Pep8, this was before I had read anything about how to properly organize code, programming practices, and before I had read clean code. Over the last month and a half, I&amp;rsquo;ve been working on a CHIP8 emulator, so for the first time in a while, I&amp;rsquo;m revisiting old topics and old books on computer architecture.</description>
    </item>
    
    <item>
      <title>Scraping Wikipedia With Rust</title>
      <link>/post/scraping-wikipedia-with-rust/</link>
      <pubDate>Sat, 20 Jun 2020 23:15:02 -0500</pubDate>
      
      <guid>/post/scraping-wikipedia-with-rust/</guid>
      <description>Writing a toy scraper As the quarantine continues and many things are still closed, I&amp;rsquo;m still spending a lot of time looking for fun side projects I can complete in a few days or less. As I drifted off to sleep one night wondering about some correlations between countries and various other data points. I realized that wikipedia probably had all the data I needed to find out. What if I could just scrape all the data off of wikipedia and throw it into sql tables so I could chart data that way?</description>
    </item>
    
    <item>
      <title>Building a Cli Tool in Rust</title>
      <link>/post/building-a-cli-tool-in-rust/</link>
      <pubDate>Sat, 02 May 2020 11:20:54 -0500</pubDate>
      
      <guid>/post/building-a-cli-tool-in-rust/</guid>
      <description>Like almost everyone I know, I’ve been sitting pacing inside for almost 8 weeks, waiting out the sars-cov-2 pandemic. I’ve been “zooming” with friends, phoning my family members, and catching up on reading. Gone are the days of concerts and movie theaters. Now is the time for reading, Animal Crossing, and updating one’s websites. So here it is, a new theme for a new year and a new post to help stave off boredom.</description>
    </item>
    
    <item>
      <title>Random Numbers</title>
      <link>/post/taocp-vol-2-seminumerical-algorithms/</link>
      <pubDate>Wed, 08 May 2019 15:30:34 -0500</pubDate>
      
      <guid>/post/taocp-vol-2-seminumerical-algorithms/</guid>
      <description>&lt;p&gt;Random numbers from the second volume of TAOCP and experimentation with PRNGs.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s been about nine months since I finished reading the first volume. Though it&amp;rsquo;s likely not a surprise to many, it&amp;rsquo;s one of the more daunting reads however, I found it to be surprisingly entertaining and well written. &lt;a href=&#34;/post/the-art-of-computer-programming/&#34;&gt;My summary of the experience reading through the first volume&lt;/a&gt; was more or less my thoughts on the book, but didn&amp;rsquo;t offer a lot in terms of the content that was covered, nor did I highlight a lot of interesting material that was gleaned from its pages – perhaps I&amp;rsquo;ll remedy that when I have time for a second read through. Admittedly, there was quite a bit of content and I don&amp;rsquo;t think I wanted to post a section by section summary of the volume, especially when you consider that much of the first volume was devoted to stacks, trees, linked lists, and other data structures, something familiar to most software engineers and programmers. Luckily the second volume is far less familiar territory (at least to me) and may be more interesting to write about.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Functional Programming in Racket</title>
      <link>/post/functional-programming-in-racket/</link>
      <pubDate>Sun, 03 Mar 2019 11:14:34 -0600</pubDate>
      
      <guid>/post/functional-programming-in-racket/</guid>
      <description>A dive into functional programming in Racket.
Preface I&amp;rsquo;ve been playing around with functional languages for a few years now; I&amp;rsquo;d pick up an ebook on scala or Clojure some Saturday afternoon and try going through a tutorial or two. Maybe attend a workshop on it over a weekend with a friend who found the event on meetup.com and get a somewhat shallow overview of the language. The next weekend I&amp;rsquo;d look at it again and see if I could get a small webpage up and running or maybe a small command line tool but for the most part, it has always ended there.</description>
    </item>
    
    <item>
      <title>The Art of Computer Programming</title>
      <link>/post/the-art-of-computer-programming/</link>
      <pubDate>Sat, 25 Aug 2018 17:56:57 -0500</pubDate>
      
      <guid>/post/the-art-of-computer-programming/</guid>
      <description>&lt;p&gt;An attempt at making my way through one of the most infamous computer science books&lt;/p&gt;
&lt;p&gt;I was recently gifted the first volume of Donald Knuth&amp;rsquo;s: &amp;ldquo;The Art of Computer Programming&amp;rdquo;. Being the computer geek that I am, I have never been so excited yet, intimidated about sitting down and working through what some people would call a Reference book.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading Parquet Files With Java</title>
      <link>/post/reading-parquet-files-java/</link>
      <pubDate>Sat, 21 Apr 2018 12:41:54 -0500</pubDate>
      
      <guid>/post/reading-parquet-files-java/</guid>
      <description>&lt;p&gt;A simple way of reading Parquet files without the need to use Spark.&lt;/p&gt;
&lt;p&gt;I recently ran into an issue where I needed to read from &lt;a href=&#34;https://parquet.apache.org/&#34;&gt;Parquet&lt;/a&gt; files in a simple way without having to use the entire Spark framework. Though inspecting the contents of a Parquet file turns out to be pretty simple using the &lt;code&gt;spark-shell&lt;/code&gt;, doing so without the framework ended up being more difficult because of a lack of documentation about how to read the actual content of Parquet files, the columnar format used by Hadoop and Spark.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>